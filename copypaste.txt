javascript:(async()=>{const generateTOTP=async(secret)=>{try{const epoch=Math.floor(new Date().getTime()/1000);const time=Math.floor(epoch/30);const crypto=window.crypto||window.msCrypto;const key=Uint8Array.from(atob(secret),c=>c.charCodeAt(0));const timeBytes=new Uint8Array(8);let tempTime=time;for(let index=7;index>=0;index--){timeBytes[index]=tempTime&0xff;tempTime>>=8;}const hmacKey=await crypto.subtle.importKey('raw',key,{name:'HMAC',hash:'SHA-1'},false,['sign']);const signature=new Uint8Array(await crypto.subtle.sign('HMAC',hmacKey,timeBytes));const offset=signature[19]&0xf;const otp=((new DataView(signature.buffer).getUint32(offset)&0x7fffffff)%1000000).toString();return otp.padStart(6,'0');}catch(error){console.error('Error in generateTOTP:',error.message);return undefined;}};const secret='YOUR_SECRET_BASE32';const otp=await generateTOTP(secret);if(otp){alert('Generated OTP: '+otp);}else{alert('Failed to generate OTP.');}})();